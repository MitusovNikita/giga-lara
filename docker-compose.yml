version: '3.8'

services:
  # The PHP-FPM service for running Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    env_file:
#      - app/.env.example
      - app/.env
    depends_on:
      - redis
      - memcached
      - mongodb
    networks:
      - laravel
      - app-network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      - REDIS_CLIENT=phpredis
      - MEMCACHED_HOST=memcached

  # The Nginx web server
  nginx:
    image: nginx:alpine
    container_name: nginx_server
    ports:
      - "8000:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
#      - mongo
    networks:
      - laravel

  # The MySQL database
  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - laravel

  # phpMyAdmin for managing the database
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - laravel

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ default port
      - "15672:15672"  # RabbitMQ management plugin
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - laravel

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    networks:
      - app-network

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - "11211:11211"
    networks:
      - app-network

  # Сервис для MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

networks:
  laravel:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  mongodb_data: